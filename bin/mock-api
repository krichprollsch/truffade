#!/usr/bin/env php
<?php

function includeIfExists($file)
{
    if (file_exists($file)) {
        return include $file;
    }
}

if (
    (!$loader = includeIfExists(__DIR__ . '/../vendor/autoload.php'))
    && (!$loader = includeIfExists(__DIR__ . '/../../../autoload.php'))
) {
    die(
        'You must set up the project dependencies, run the following commands:' . PHP_EOL
        . 'curl -s http://getcomposer.org/installer | php' . PHP_EOL
        . 'php composer.phar install' . PHP_EOL
    );
}

use Symfony\Component\Console\Application;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;

use Krichprollsch\MockServer\Server;

(new Application('mock-api', '1.0.0'))
    ->register('mock-api')
        ->addOption('admin-port', null, InputOption::VALUE_REQUIRED, 'Which port the admin server should listen')
        ->addOption('mock-port', null, InputOption::VALUE_REQUIRED, 'Which port the mock server should listen')
        ->setCode(function (InputInterface $input, OutputInterface $output) {
            (new Server(
                (int) $input->getOption('mock-port') ?: 8080,
                (int) $input->getOption('admin-port') ?: 8081
            ))->start();
        })
    ->getApplication()
    ->setDefaultCommand('mock-api', true)
    ->run();
